<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnmasuk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAB3gAAACkCAYAAAB1o/8FAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAADXdJREFUeF7t3b9uFFkWwOFJN9oUEqczCemSEEPgnICcgJyRyBmJfFnxACA/wLK8
        APgFZngCeIKZYP0H2+DVKam93be76t5q2qZO93ekT0h236rqMtlPt+qn//79b5cAAAAAAAAATN9P5Q8A
        AAAAAAAAmCaBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        AAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEXAAAAAAAAIAmBFwAAAAAAACAJgRcAAAAAAAAgCYEX
        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
        gg==
</value>
  </data>
</root>